import{a as e,g as t}from"./phaser-DZmpgkch.js";import{e as s}from"./index-BOMaH9mp.js";import{e as a}from"./events-H2C8Ccfw.js";function r(e,t){for(var s=0;s<t.length;s++){const a=t[s];if("string"!=typeof a&&!Array.isArray(a))for(const t in a)if("default"!==t&&!(t in e)){const s=Object.getOwnPropertyDescriptor(a,t);s&&Object.defineProperty(e,t,s.get?s:{enumerable:!0,get:()=>a[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}var n={},i={};const o=e(s);var h={};Object.defineProperty(h,"__esModule",{value:!0}),h.numberToHex=h.getLowerCase=void 0,h.getLowerCase=function(e){return e?e.toLowerCase():e},h.numberToHex=function(e){return`0x${e.toString(16)}`},Object.defineProperty(i,"__esModule",{value:!0}),i.SafeAppProvider=void 0;const c=o,d=a,u=h;class l extends d.EventEmitter{constructor(e,t){super(),this.submittedTxs=new Map,this.safe=e,this.sdk=t}async connect(){this.emit("connect",{chainId:this.chainId})}async disconnect(){}get chainId(){return this.safe.chainId}async request(e){var t,s,a,r;const{method:n,params:i=[]}=e;switch(n){case"eth_accounts":return[this.safe.safeAddress];case"net_version":case"eth_chainId":return(0,u.numberToHex)(this.chainId);case"personal_sign":{const[e,t]=i;if(this.safe.safeAddress.toLowerCase()!==t.toLowerCase())throw new Error("The address or message hash is invalid");const s=await this.sdk.txs.signMessage(e);return("signature"in s?s.signature:void 0)||"0x"}case"eth_sign":{const[e,t]=i;if(this.safe.safeAddress.toLowerCase()!==e.toLowerCase()||!t.startsWith("0x"))throw new Error("The address or message hash is invalid");const s=await this.sdk.txs.signMessage(t);return("signature"in s?s.signature:void 0)||"0x"}case"eth_signTypedData":case"eth_signTypedData_v4":{const[e,t]=i,s="string"==typeof t?JSON.parse(t):t;if(this.safe.safeAddress.toLowerCase()!==e.toLowerCase())throw new Error("The address is invalid");const a=await this.sdk.txs.signTypedMessage(s);return("signature"in a?a.signature:void 0)||"0x"}case"eth_sendTransaction":const n={...i[0],value:i[0].value||"0",data:i[0].data||"0x"};"string"==typeof n.gas&&n.gas.startsWith("0x")&&(n.gas=parseInt(n.gas,16));const h=await this.sdk.txs.send({txs:[n],params:{safeTxGas:n.gas}});return this.submittedTxs.set(h.safeTxHash,{from:this.safe.safeAddress,hash:h.safeTxHash,gas:0,gasPrice:"0x00",nonce:0,input:n.data,value:n.value,to:n.to,blockHash:null,blockNumber:null,transactionIndex:null}),h.safeTxHash;case"eth_blockNumber":return(await this.sdk.eth.getBlockByNumber(["latest"])).number;case"eth_getBalance":return this.sdk.eth.getBalance([(0,u.getLowerCase)(i[0]),i[1]]);case"eth_getCode":return this.sdk.eth.getCode([(0,u.getLowerCase)(i[0]),i[1]]);case"eth_getTransactionCount":return this.sdk.eth.getTransactionCount([(0,u.getLowerCase)(i[0]),i[1]]);case"eth_getStorageAt":return this.sdk.eth.getStorageAt([(0,u.getLowerCase)(i[0]),i[1],i[2]]);case"eth_getBlockByNumber":return this.sdk.eth.getBlockByNumber([i[0],i[1]]);case"eth_getBlockByHash":return this.sdk.eth.getBlockByHash([i[0],i[1]]);case"eth_getTransactionByHash":let d=i[0];try{d=(await this.sdk.txs.getBySafeTxHash(d)).txHash||d}catch(o){}return this.submittedTxs.has(d)?this.submittedTxs.get(d):this.sdk.eth.getTransactionByHash([d]).then((e=>(e&&(e.hash=i[0]),e)));case"eth_getTransactionReceipt":{let e=i[0];try{e=(await this.sdk.txs.getBySafeTxHash(e)).txHash||e}catch(o){}return this.sdk.eth.getTransactionReceipt([e]).then((e=>(e&&(e.transactionHash=i[0]),e)))}case"eth_estimateGas":return this.sdk.eth.getEstimateGas(i[0]);case"eth_call":return this.sdk.eth.call([i[0],i[1]]);case"eth_getLogs":return this.sdk.eth.getPastLogs([i[0]]);case"eth_gasPrice":return this.sdk.eth.getGasPrice();case"wallet_getPermissions":return this.sdk.wallet.getPermissions();case"wallet_requestPermissions":return this.sdk.wallet.requestPermissions(i[0]);case"safe_setSettings":return this.sdk.eth.setSafeSettings([i[0]]);case"wallet_sendCalls":{if(i[0].from!==this.safe.safeAddress)throw Error("Invalid from address");const e=i[0].calls.map(((e,t)=>{if(e.chainId!==(0,u.numberToHex)(this.chainId))throw new Error(`Invalid call #${t}: Safe is not on chain ${e.chainId}`);if(!e.to)throw new Error(`Invalid call #${t}: missing "to" field`);return{to:e.to,data:e.data??"0x",value:e.value??(0,u.numberToHex)(0)}})),{safeTxHash:t}=await this.sdk.txs.send({txs:e});return t}case"wallet_getCallsStatus":{const e={[c.TransactionStatus.AWAITING_CONFIRMATIONS]:"PENDING",[c.TransactionStatus.AWAITING_EXECUTION]:"PENDING",[c.TransactionStatus.CANCELLED]:"CONFIRMED",[c.TransactionStatus.FAILED]:"CONFIRMED",[c.TransactionStatus.SUCCESS]:"CONFIRMED"},n=await this.sdk.txs.getBySafeTxHash(i[0]),o=e[n.txStatus];if(!n.txHash)return{status:o};const h=await this.sdk.eth.getTransactionReceipt([n.txHash]);if(!h)return{status:o};const d="multiSend"!==(null==(s=null==(t=n.txData)?void 0:t.dataDecoded)?void 0:s.method)?1:(null==(r=null==(a=n.txData.dataDecoded.parameters)?void 0:a[0].valueDecoded)?void 0:r.length)??1,l=Number(h.blockNumber),g=Number(h.gasUsed);return{status:o,receipts:Array(d).fill({logs:h.logs,status:(0,u.numberToHex)(n.txStatus===c.TransactionStatus.SUCCESS?1:0),chainId:(0,u.numberToHex)(this.chainId),blockHash:h.blockHash,blockNumber:(0,u.numberToHex)(l),gasUsed:(0,u.numberToHex)(g),transactionHash:n.txHash})}}case"wallet_showCallsStatus":throw new Error(`"${e.method}" not supported`);case"wallet_getCapabilities":return{[(0,u.numberToHex)(this.chainId)]:{atomicBatch:{supported:!0}}};default:throw Error(`"${e.method}" not implemented`)}}send(e,t){e||t("Undefined request"),this.request(e).then((s=>t(null,{jsonrpc:"2.0",id:e.id,result:s}))).catch((e=>t(e,null)))}}i.SafeAppProvider=l,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.SafeAppProvider=void 0;var t=i;Object.defineProperty(e,"SafeAppProvider",{enumerable:!0,get:function(){return t.SafeAppProvider}})}(n);const g=r({__proto__:null,default:t(n)},[n]);export{g as i};
